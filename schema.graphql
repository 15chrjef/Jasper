type Query {
	user: User!
  menuItem(menuItemId: ID!): MenuItem!
  menuItems: [MenuItem!]!
	locations: [Location!]!
	location: Location!
	tabletDevice(tabletDeviceId: ID!): TabletDevice!
	ordersByLocationAndStatus(locationId: ID!, status: OrderStatus!): [OrderLog]!
	menuItemsByCategory(menuCategoryId: ID!): [MenuItem]!
	optionsByMenuItem(menuItemId: ID!, orderByOptions: OptionOrderByInput!): [Option]!
	orderLogsFromToday: [OrderLog!]!
}

type Mutation {
	createMenuItem(title: String!, price: Int!, pictureURL: URL!, categoryId: ID!, description: String!, calories: String!): MenuItem
	createLocation(address: String!, phoneNumber: PhoneNumber!, email: EmailAddress!, name: String!, timeZone: TIME_ZONE!): Location
	createOption(menuItems: [MenuItemIdInput]!, title: String!, maxSelections: Int!, required: Boolean!, priority: Int!): Option
	createMenuCategory(name: String!): MenuCategory
	createKitchenPrinter(type: KitchenPrinterType!, ipAddress: String!): KitchenPrinter
	createOptionValue(optionId: ID!, title: String!, price: Int, isDefault: Boolean!, priority: Int!): OptionValue
  uploadMenuItemPicture(file: Upload!, menuItemId: ID!): MenuItem
  updateUser(password: String!, email: EmailAddress!, name: String!): User
	updateMenuItem(menuItemId: ID!, title: String!, description: String!, url: URL!, price: Int!, menuItemToUpsell: ID): MenuItem
	updateLocation(locationId: ID!, address: String!, email: EmailAddress!, phoneNumber: PhoneNumber!): Location
	updateMenuCategory(name: String!): MenuCategory
	updateOption(optionId: ID!, title: String!, maxSelections: Int!, required: Boolean!, priority: Int!): Option
	deleteUser: User
	deleteOrder(orderId: ID!): OrderLog
	deleteOptionValue(optionValueId: ID!): OptionValue
	deleteLocation(locationId: ID!): Location
	deleteMenuItem(menuItemId: ID!): MenuItem
	signup(email: String!, password: String!, name: String!, pictureURL: URL): AuthPayload
  login(email: String!, password: String!): AuthPayload
	syncLocation: responseObject
	updateOrder(orderId: ID!, lineItems: [LineItemInput]!): responseObject
	addAccessTokenToLocation(code: String!, merchantId: String!): Location
	updateMenuItemPreferences(menuItemId: ID!, preferences: [Preference!]!): MenuItem
	createOrderLog(items: [OrderItemInput!]!): OrderLog
}

type User {
  id: ID!
  email: EmailAddress!
	password: String!
	name: String!
	locations: [Location]!
	createdAt: DateTime!
}

type MenuItem {
  id: ID!
  title: String!
	description: String!
  price: Int!
	pictureURL: URL!
	calories: String
  location: Location!
	paymentProcessorId: String
	menuItemToUpsell: MenuItem
	options: [Option]!
	preferences: [Preference!]!
	categories: [MenuCategory]!
	createdAt: DateTime!
}


type Location {
	id: ID!
	address: String!
	phoneNumber: PhoneNumber
	email: EmailAddress
	name: String!
	pictureURL: String
	timeZone: TIME_ZONE!
	owner: User!
	cloverMetaData: CloverMetaData
	tabletDevices: [TabletDevice!]!
	menuItems: [MenuItem!]!
	menuCategories: [MenuCategory!]!
	orderLogs: [OrderLog!]!
	taxes: [Tax!]!
	createdAt: DateTime!
}

type OrderLog {
	id: ID!
	location: Location!
	status: OrderStatus!
  orderedItems: [OrderedItem!]!
	createdAt: DateTime!
}

type OrderedItem {
  id: ID!
  menuItem: MenuItem
  optionValues: [OptionValue!]!
  quantity: Int!
}

type MenuCategory {
	id: ID!
	name: String!
	paymentProcessorId: String
	owner: Location!
	menuItems: [MenuItem]!
	createdAt: DateTime!
}

type Option {
  id: ID!
	title: String!
  maxSelections: Int!
	required: Boolean!
	priority: Int!
	paymentProcessorId: String
	optionValues: [OptionValue!]!
	createdAt: DateTime!
}

type OptionValue {
  id: ID!
  title: String!
  price: Int
  isDefault: Boolean!
	priority: Int!
	pictureURL: URL
	paymentProcessorId: String
  createdAt: DateTime!
}

type Tax {
	id: ID!
	taxAmount: Int!
	name: String!
  paymentProcessorId: String
  taxType: TaxType!
  createdAt: DateTime!
}

type TabletDevice {
  id: ID!
  headerId: String!
	cloverPaymentDeviceId: String
	kitchenPrinter: KitchenPrinter
	createdAt: DateTime!
}

type AuthPayload {
  token: String
  user: User
}

type KitchenPrinter {
	id: ID!
	ipAddress: String!
  type: KitchenPrinterType!
  createdAt: DateTime!
}

type CloverMetaData {
	id: ID!
  merchantId: ID!
  accessToken: String!
  locations: [Location!]!
  createdAt: DateTime!
}

input LineItemInput {
	name: String!
	price: Int!
	itemId: String!
	modifications: [ModificationInput]!
}

input MenuItemIdInput {
 id: ID!
}

input OrderItemInput {
	menuItemId: ID!
	optionValueIds: [ID!]!
	quantity: Int!
}

input ModificationInput {
	modificationId: String!
}

type responseObject {
  code: String
}

enum TaxType {
  PERCENT
  FLAT
}

enum OrderStatus {
  ORDERED
  INPREPERATION
  DONE
	CANCELLED
}

enum PaymentProcessor {
	CLOVER
	SQUARE
}

enum TransactionOrderByInput {
  createdAt_ASC
  createdAt_DESC
}

enum KitchenPrinterType {
  EPSON
  STAR
}

enum OptionOrderByInput {
  priority_ASC
  priority_DESC
}

enum OptionValueOrderByInput {
  priority_ASC
  priority_DESC
}

enum Preference {
	VEGAN
	VEGETARIAN
  PEANUTFREE
	DAIRYFREE
}

enum TIME_ZONE {
  EST
  PST
  CST
  MST
}

scalar DateTime

scalar EmailAddress

scalar PhoneNumber

scalar URL

scalar Upload
