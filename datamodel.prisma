type User {
  id: ID! @id
  email: String @unique
  password: String!
  name: String!
  menuItems: [MenuItem]! @relation(onDelete: CASCADE)
  locations: [Location]! @relation(onDelete: CASCADE)
	createdAt: DateTime! @createdAt
  deletedAt: DateTime
}

type MenuItem {
  id: ID! @id
  title: String!
  price: Float!
  pictureURL: String!
  author: User @relation(link: INLINE onDelete: SET_NULL)
  orders: [Order]! @relation(onDelete: CASCADE)
  transactions: [Transaction]! @relation(onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  deletedAt: DateTime
}

type Location {
	id: ID! @id
	address: String!
	phoneNumber: String!
	email: String!
	owner: User! @relation(link: INLINE onDelete: SET_NULL)
  transactions: [Transaction]! @relation(onDelete: CASCADE)
  orders: [Order]! @relation(onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  deletedAt: DateTime
}

type Order {
	id: ID! @id
	menuItem: MenuItem! @relation(link: INLINE onDelete: SET_NULL)
	location: Location! @relation(link: INLINE onDelete: SET_NULL)
	status: MealStatus!
	createdAt: DateTime! @createdAt
  deletedAt: DateTime
}

type Transaction {
	id: ID! @id
	location: Location! @relation(link: INLINE onDelete: SET_NULL)
	menuItem: MenuItem! @relation(link: INLINE onDelete: SET_NULL)
	createdAt: DateTime! @createdAt
  deletedAt: DateTime
}

enum MealStatus {
  ORDERED
  PREPARING
  DONE
	CANCELLED
}